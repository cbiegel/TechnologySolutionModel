/**
 */
package org.emftrace.metamodel.URNModel.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.emftrace.metamodel.URNModel.util.URNModelAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class URNModelItemProviderAdapterFactory extends URNModelAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public URNModelItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.ActiveResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActiveResourceItemProvider activeResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.ActiveResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActiveResourceAdapter() {
		if (activeResourceItemProvider == null) {
			activeResourceItemProvider = new ActiveResourceItemProvider(this);
		}

		return activeResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.Actor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActorItemProvider actorItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.Actor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActorAdapter() {
		if (actorItemProvider == null) {
			actorItemProvider = new ActorItemProvider(this);
		}

		return actorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.ActorRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActorRefItemProvider actorRefItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.ActorRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActorRefAdapter() {
		if (actorRefItemProvider == null) {
			actorRefItemProvider = new ActorRefItemProvider(this);
		}

		return actorRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.AndFork} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AndForkItemProvider andForkItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.AndFork}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAndForkAdapter() {
		if (andForkItemProvider == null) {
			andForkItemProvider = new AndForkItemProvider(this);
		}

		return andForkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.AndJoin} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AndJoinItemProvider andJoinItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.AndJoin}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAndJoinAdapter() {
		if (andJoinItemProvider == null) {
			andJoinItemProvider = new AndJoinItemProvider(this);
		}

		return andJoinItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.ClosedWorkload} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClosedWorkloadItemProvider closedWorkloadItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.ClosedWorkload}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClosedWorkloadAdapter() {
		if (closedWorkloadItemProvider == null) {
			closedWorkloadItemProvider = new ClosedWorkloadItemProvider(this);
		}

		return closedWorkloadItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.CollapsedActorRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CollapsedActorRefItemProvider collapsedActorRefItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.CollapsedActorRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCollapsedActorRefAdapter() {
		if (collapsedActorRefItemProvider == null) {
			collapsedActorRefItemProvider = new CollapsedActorRefItemProvider(this);
		}

		return collapsedActorRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.Comment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommentItemProvider commentItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.Comment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommentAdapter() {
		if (commentItemProvider == null) {
			commentItemProvider = new CommentItemProvider(this);
		}

		return commentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.Component} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentItemProvider componentItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.Component}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComponentAdapter() {
		if (componentItemProvider == null) {
			componentItemProvider = new ComponentItemProvider(this);
		}

		return componentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.ComponentBinding} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentBindingItemProvider componentBindingItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.ComponentBinding}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComponentBindingAdapter() {
		if (componentBindingItemProvider == null) {
			componentBindingItemProvider = new ComponentBindingItemProvider(this);
		}

		return componentBindingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.ComponentRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentRefItemProvider componentRefItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.ComponentRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComponentRefAdapter() {
		if (componentRefItemProvider == null) {
			componentRefItemProvider = new ComponentRefItemProvider(this);
		}

		return componentRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.ComponentType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentTypeItemProvider componentTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.ComponentType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComponentTypeAdapter() {
		if (componentTypeItemProvider == null) {
			componentTypeItemProvider = new ComponentTypeItemProvider(this);
		}

		return componentTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.Concern} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConcernItemProvider concernItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.Concern}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConcernAdapter() {
		if (concernItemProvider == null) {
			concernItemProvider = new ConcernItemProvider(this);
		}

		return concernItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.ConcreteCondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConcreteConditionItemProvider concreteConditionItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.ConcreteCondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConcreteConditionAdapter() {
		if (concreteConditionItemProvider == null) {
			concreteConditionItemProvider = new ConcreteConditionItemProvider(this);
		}

		return concreteConditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.ConcreteGRLspec} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConcreteGRLspecItemProvider concreteGRLspecItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.ConcreteGRLspec}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConcreteGRLspecAdapter() {
		if (concreteGRLspecItemProvider == null) {
			concreteGRLspecItemProvider = new ConcreteGRLspecItemProvider(this);
		}

		return concreteGRLspecItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.ConcreteStyle} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConcreteStyleItemProvider concreteStyleItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.ConcreteStyle}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConcreteStyleAdapter() {
		if (concreteStyleItemProvider == null) {
			concreteStyleItemProvider = new ConcreteStyleItemProvider(this);
		}

		return concreteStyleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.ConcreteURNspec} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConcreteURNspecItemProvider concreteURNspecItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.ConcreteURNspec}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConcreteURNspecAdapter() {
		if (concreteURNspecItemProvider == null) {
			concreteURNspecItemProvider = new ConcreteURNspecItemProvider(this);
		}

		return concreteURNspecItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.Condition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConditionItemProvider conditionItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.Condition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConditionAdapter() {
		if (conditionItemProvider == null) {
			conditionItemProvider = new ConditionItemProvider(this);
		}

		return conditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.Connect} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectItemProvider connectItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.Connect}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectAdapter() {
		if (connectItemProvider == null) {
			connectItemProvider = new ConnectItemProvider(this);
		}

		return connectItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.Contribution} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContributionItemProvider contributionItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.Contribution}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContributionAdapter() {
		if (contributionItemProvider == null) {
			contributionItemProvider = new ContributionItemProvider(this);
		}

		return contributionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.Decomposition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DecompositionItemProvider decompositionItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.Decomposition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDecompositionAdapter() {
		if (decompositionItemProvider == null) {
			decompositionItemProvider = new DecompositionItemProvider(this);
		}

		return decompositionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.Demand} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DemandItemProvider demandItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.Demand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDemandAdapter() {
		if (demandItemProvider == null) {
			demandItemProvider = new DemandItemProvider(this);
		}

		return demandItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.Dependency} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DependencyItemProvider dependencyItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.Dependency}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDependencyAdapter() {
		if (dependencyItemProvider == null) {
			dependencyItemProvider = new DependencyItemProvider(this);
		}

		return dependencyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.Description} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DescriptionItemProvider descriptionItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.Description}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDescriptionAdapter() {
		if (descriptionItemProvider == null) {
			descriptionItemProvider = new DescriptionItemProvider(this);
		}

		return descriptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.DirectionArrow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DirectionArrowItemProvider directionArrowItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.DirectionArrow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDirectionArrowAdapter() {
		if (directionArrowItemProvider == null) {
			directionArrowItemProvider = new DirectionArrowItemProvider(this);
		}

		return directionArrowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.DocumentRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentRootItemProvider documentRootItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.DocumentRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentRootAdapter() {
		if (documentRootItemProvider == null) {
			documentRootItemProvider = new DocumentRootItemProvider(this);
		}

		return documentRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.ElementLink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElementLinkItemProvider elementLinkItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.ElementLink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElementLinkAdapter() {
		if (elementLinkItemProvider == null) {
			elementLinkItemProvider = new ElementLinkItemProvider(this);
		}

		return elementLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.EmptyPoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EmptyPointItemProvider emptyPointItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.EmptyPoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEmptyPointAdapter() {
		if (emptyPointItemProvider == null) {
			emptyPointItemProvider = new EmptyPointItemProvider(this);
		}

		return emptyPointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.EndPoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EndPointItemProvider endPointItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.EndPoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEndPointAdapter() {
		if (endPointItemProvider == null) {
			endPointItemProvider = new EndPointItemProvider(this);
		}

		return endPointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.EnumerationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumerationTypeItemProvider enumerationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.EnumerationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumerationTypeAdapter() {
		if (enumerationTypeItemProvider == null) {
			enumerationTypeItemProvider = new EnumerationTypeItemProvider(this);
		}

		return enumerationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.Evaluation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvaluationItemProvider evaluationItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.Evaluation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvaluationAdapter() {
		if (evaluationItemProvider == null) {
			evaluationItemProvider = new EvaluationItemProvider(this);
		}

		return evaluationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.EvaluationStrategy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvaluationStrategyItemProvider evaluationStrategyItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.EvaluationStrategy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvaluationStrategyAdapter() {
		if (evaluationStrategyItemProvider == null) {
			evaluationStrategyItemProvider = new EvaluationStrategyItemProvider(this);
		}

		return evaluationStrategyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.ExternalOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExternalOperationItemProvider externalOperationItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.ExternalOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExternalOperationAdapter() {
		if (externalOperationItemProvider == null) {
			externalOperationItemProvider = new ExternalOperationItemProvider(this);
		}

		return externalOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.GeneralResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeneralResourceItemProvider generalResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.GeneralResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeneralResourceAdapter() {
		if (generalResourceItemProvider == null) {
			generalResourceItemProvider = new GeneralResourceItemProvider(this);
		}

		return generalResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.GRLGraph} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GRLGraphItemProvider grlGraphItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.GRLGraph}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGRLGraphAdapter() {
		if (grlGraphItemProvider == null) {
			grlGraphItemProvider = new GRLGraphItemProvider(this);
		}

		return grlGraphItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.GRLLinkableElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GRLLinkableElementItemProvider grlLinkableElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.GRLLinkableElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGRLLinkableElementAdapter() {
		if (grlLinkableElementItemProvider == null) {
			grlLinkableElementItemProvider = new GRLLinkableElementItemProvider(this);
		}

		return grlLinkableElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.GRLmodelElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GRLmodelElementItemProvider grLmodelElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.GRLmodelElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGRLmodelElementAdapter() {
		if (grLmodelElementItemProvider == null) {
			grLmodelElementItemProvider = new GRLmodelElementItemProvider(this);
		}

		return grLmodelElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.GRLNode} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GRLNodeItemProvider grlNodeItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.GRLNode}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGRLNodeAdapter() {
		if (grlNodeItemProvider == null) {
			grlNodeItemProvider = new GRLNodeItemProvider(this);
		}

		return grlNodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.GRLspec} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GRLspecItemProvider grLspecItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.GRLspec}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGRLspecAdapter() {
		if (grLspecItemProvider == null) {
			grLspecItemProvider = new GRLspecItemProvider(this);
		}

		return grLspecItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.InBinding} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InBindingItemProvider inBindingItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.InBinding}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInBindingAdapter() {
		if (inBindingItemProvider == null) {
			inBindingItemProvider = new InBindingItemProvider(this);
		}

		return inBindingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.Initialization} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InitializationItemProvider initializationItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.Initialization}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInitializationAdapter() {
		if (initializationItemProvider == null) {
			initializationItemProvider = new InitializationItemProvider(this);
		}

		return initializationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.IntentionalElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntentionalElementItemProvider intentionalElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.IntentionalElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntentionalElementAdapter() {
		if (intentionalElementItemProvider == null) {
			intentionalElementItemProvider = new IntentionalElementItemProvider(this);
		}

		return intentionalElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.IntentionalElementRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntentionalElementRefItemProvider intentionalElementRefItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.IntentionalElementRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntentionalElementRefAdapter() {
		if (intentionalElementRefItemProvider == null) {
			intentionalElementRefItemProvider = new IntentionalElementRefItemProvider(this);
		}

		return intentionalElementRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.Label} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LabelItemProvider labelItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.Label}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLabelAdapter() {
		if (labelItemProvider == null) {
			labelItemProvider = new LabelItemProvider(this);
		}

		return labelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.LinkRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinkRefItemProvider linkRefItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.LinkRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinkRefAdapter() {
		if (linkRefItemProvider == null) {
			linkRefItemProvider = new LinkRefItemProvider(this);
		}

		return linkRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.LinkRefBendpoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinkRefBendpointItemProvider linkRefBendpointItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.LinkRefBendpoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinkRefBendpointAdapter() {
		if (linkRefBendpointItemProvider == null) {
			linkRefBendpointItemProvider = new LinkRefBendpointItemProvider(this);
		}

		return linkRefBendpointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.Metadata} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MetadataItemProvider metadataItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.Metadata}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMetadataAdapter() {
		if (metadataItemProvider == null) {
			metadataItemProvider = new MetadataItemProvider(this);
		}

		return metadataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.NodeConnection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NodeConnectionItemProvider nodeConnectionItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.NodeConnection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNodeConnectionAdapter() {
		if (nodeConnectionItemProvider == null) {
			nodeConnectionItemProvider = new NodeConnectionItemProvider(this);
		}

		return nodeConnectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.OpenWorkload} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OpenWorkloadItemProvider openWorkloadItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.OpenWorkload}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOpenWorkloadAdapter() {
		if (openWorkloadItemProvider == null) {
			openWorkloadItemProvider = new OpenWorkloadItemProvider(this);
		}

		return openWorkloadItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.OrFork} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrForkItemProvider orForkItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.OrFork}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrForkAdapter() {
		if (orForkItemProvider == null) {
			orForkItemProvider = new OrForkItemProvider(this);
		}

		return orForkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.OrJoin} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrJoinItemProvider orJoinItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.OrJoin}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrJoinAdapter() {
		if (orJoinItemProvider == null) {
			orJoinItemProvider = new OrJoinItemProvider(this);
		}

		return orJoinItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.OutBinding} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutBindingItemProvider outBindingItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.OutBinding}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutBindingAdapter() {
		if (outBindingItemProvider == null) {
			outBindingItemProvider = new OutBindingItemProvider(this);
		}

		return outBindingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.OWPeriodic} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OWPeriodicItemProvider owPeriodicItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.OWPeriodic}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOWPeriodicAdapter() {
		if (owPeriodicItemProvider == null) {
			owPeriodicItemProvider = new OWPeriodicItemProvider(this);
		}

		return owPeriodicItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.OWPhaseType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OWPhaseTypeItemProvider owPhaseTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.OWPhaseType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOWPhaseTypeAdapter() {
		if (owPhaseTypeItemProvider == null) {
			owPhaseTypeItemProvider = new OWPhaseTypeItemProvider(this);
		}

		return owPhaseTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.OWPoisson} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OWPoissonItemProvider owPoissonItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.OWPoisson}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOWPoissonAdapter() {
		if (owPoissonItemProvider == null) {
			owPoissonItemProvider = new OWPoissonItemProvider(this);
		}

		return owPoissonItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.OWUniform} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OWUniformItemProvider owUniformItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.OWUniform}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOWUniformAdapter() {
		if (owUniformItemProvider == null) {
			owUniformItemProvider = new OWUniformItemProvider(this);
		}

		return owUniformItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.PassiveResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PassiveResourceItemProvider passiveResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.PassiveResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPassiveResourceAdapter() {
		if (passiveResourceItemProvider == null) {
			passiveResourceItemProvider = new PassiveResourceItemProvider(this);
		}

		return passiveResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.PathNode} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PathNodeItemProvider pathNodeItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.PathNode}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPathNodeAdapter() {
		if (pathNodeItemProvider == null) {
			pathNodeItemProvider = new PathNodeItemProvider(this);
		}

		return pathNodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.PluginBinding} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PluginBindingItemProvider pluginBindingItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.PluginBinding}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPluginBindingAdapter() {
		if (pluginBindingItemProvider == null) {
			pluginBindingItemProvider = new PluginBindingItemProvider(this);
		}

		return pluginBindingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.Position} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PositionItemProvider positionItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.Position}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPositionAdapter() {
		if (positionItemProvider == null) {
			positionItemProvider = new PositionItemProvider(this);
		}

		return positionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.ProcessingResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessingResourceItemProvider processingResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.ProcessingResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessingResourceAdapter() {
		if (processingResourceItemProvider == null) {
			processingResourceItemProvider = new ProcessingResourceItemProvider(this);
		}

		return processingResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.Responsibility} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResponsibilityItemProvider responsibilityItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.Responsibility}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResponsibilityAdapter() {
		if (responsibilityItemProvider == null) {
			responsibilityItemProvider = new ResponsibilityItemProvider(this);
		}

		return responsibilityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.RespRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RespRefItemProvider respRefItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.RespRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRespRefAdapter() {
		if (respRefItemProvider == null) {
			respRefItemProvider = new RespRefItemProvider(this);
		}

		return respRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.ScenarioDef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScenarioDefItemProvider scenarioDefItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.ScenarioDef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScenarioDefAdapter() {
		if (scenarioDefItemProvider == null) {
			scenarioDefItemProvider = new ScenarioDefItemProvider(this);
		}

		return scenarioDefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.ScenarioGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScenarioGroupItemProvider scenarioGroupItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.ScenarioGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScenarioGroupAdapter() {
		if (scenarioGroupItemProvider == null) {
			scenarioGroupItemProvider = new ScenarioGroupItemProvider(this);
		}

		return scenarioGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.Size} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SizeItemProvider sizeItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.Size}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSizeAdapter() {
		if (sizeItemProvider == null) {
			sizeItemProvider = new SizeItemProvider(this);
		}

		return sizeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.StartPoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StartPointItemProvider startPointItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.StartPoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStartPointAdapter() {
		if (startPointItemProvider == null) {
			startPointItemProvider = new StartPointItemProvider(this);
		}

		return startPointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.StrategiesGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StrategiesGroupItemProvider strategiesGroupItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.StrategiesGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStrategiesGroupAdapter() {
		if (strategiesGroupItemProvider == null) {
			strategiesGroupItemProvider = new StrategiesGroupItemProvider(this);
		}

		return strategiesGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.Stub} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StubItemProvider stubItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.Stub}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStubAdapter() {
		if (stubItemProvider == null) {
			stubItemProvider = new StubItemProvider(this);
		}

		return stubItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.Timer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimerItemProvider timerItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.Timer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimerAdapter() {
		if (timerItemProvider == null) {
			timerItemProvider = new TimerItemProvider(this);
		}

		return timerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.UCMmap} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UCMmapItemProvider ucMmapItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.UCMmap}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUCMmapAdapter() {
		if (ucMmapItemProvider == null) {
			ucMmapItemProvider = new UCMmapItemProvider(this);
		}

		return ucMmapItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.UCMmodelElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UCMmodelElementItemProvider ucMmodelElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.UCMmodelElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUCMmodelElementAdapter() {
		if (ucMmodelElementItemProvider == null) {
			ucMmodelElementItemProvider = new UCMmodelElementItemProvider(this);
		}

		return ucMmodelElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.UCMspec} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UCMspecItemProvider ucMspecItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.UCMspec}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUCMspecAdapter() {
		if (ucMspecItemProvider == null) {
			ucMspecItemProvider = new UCMspecItemProvider(this);
		}

		return ucMspecItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.URNlink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected URNlinkItemProvider urNlinkItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.URNlink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createURNlinkAdapter() {
		if (urNlinkItemProvider == null) {
			urNlinkItemProvider = new URNlinkItemProvider(this);
		}

		return urNlinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.URNmodelElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected URNmodelElementItemProvider urNmodelElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.URNmodelElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createURNmodelElementAdapter() {
		if (urNmodelElementItemProvider == null) {
			urNmodelElementItemProvider = new URNmodelElementItemProvider(this);
		}

		return urNmodelElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.URNspec} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected URNspecItemProvider urNspecItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.URNspec}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createURNspecAdapter() {
		if (urNspecItemProvider == null) {
			urNspecItemProvider = new URNspecItemProvider(this);
		}

		return urNspecItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.Variable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableItemProvider variableItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.Variable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableAdapter() {
		if (variableItemProvider == null) {
			variableItemProvider = new VariableItemProvider(this);
		}

		return variableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.WaitingPlace} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WaitingPlaceItemProvider waitingPlaceItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.WaitingPlace}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWaitingPlaceAdapter() {
		if (waitingPlaceItemProvider == null) {
			waitingPlaceItemProvider = new WaitingPlaceItemProvider(this);
		}

		return waitingPlaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.emftrace.metamodel.URNModel.Workload} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkloadItemProvider workloadItemProvider;

	/**
	 * This creates an adapter for a {@link org.emftrace.metamodel.URNModel.Workload}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkloadAdapter() {
		if (workloadItemProvider == null) {
			workloadItemProvider = new WorkloadItemProvider(this);
		}

		return workloadItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (activeResourceItemProvider != null) activeResourceItemProvider.dispose();
		if (actorItemProvider != null) actorItemProvider.dispose();
		if (actorRefItemProvider != null) actorRefItemProvider.dispose();
		if (andForkItemProvider != null) andForkItemProvider.dispose();
		if (andJoinItemProvider != null) andJoinItemProvider.dispose();
		if (closedWorkloadItemProvider != null) closedWorkloadItemProvider.dispose();
		if (collapsedActorRefItemProvider != null) collapsedActorRefItemProvider.dispose();
		if (commentItemProvider != null) commentItemProvider.dispose();
		if (componentItemProvider != null) componentItemProvider.dispose();
		if (componentBindingItemProvider != null) componentBindingItemProvider.dispose();
		if (componentRefItemProvider != null) componentRefItemProvider.dispose();
		if (componentTypeItemProvider != null) componentTypeItemProvider.dispose();
		if (concernItemProvider != null) concernItemProvider.dispose();
		if (concreteConditionItemProvider != null) concreteConditionItemProvider.dispose();
		if (concreteGRLspecItemProvider != null) concreteGRLspecItemProvider.dispose();
		if (concreteStyleItemProvider != null) concreteStyleItemProvider.dispose();
		if (concreteURNspecItemProvider != null) concreteURNspecItemProvider.dispose();
		if (conditionItemProvider != null) conditionItemProvider.dispose();
		if (connectItemProvider != null) connectItemProvider.dispose();
		if (contributionItemProvider != null) contributionItemProvider.dispose();
		if (decompositionItemProvider != null) decompositionItemProvider.dispose();
		if (demandItemProvider != null) demandItemProvider.dispose();
		if (dependencyItemProvider != null) dependencyItemProvider.dispose();
		if (descriptionItemProvider != null) descriptionItemProvider.dispose();
		if (directionArrowItemProvider != null) directionArrowItemProvider.dispose();
		if (documentRootItemProvider != null) documentRootItemProvider.dispose();
		if (elementLinkItemProvider != null) elementLinkItemProvider.dispose();
		if (emptyPointItemProvider != null) emptyPointItemProvider.dispose();
		if (endPointItemProvider != null) endPointItemProvider.dispose();
		if (enumerationTypeItemProvider != null) enumerationTypeItemProvider.dispose();
		if (evaluationItemProvider != null) evaluationItemProvider.dispose();
		if (evaluationStrategyItemProvider != null) evaluationStrategyItemProvider.dispose();
		if (externalOperationItemProvider != null) externalOperationItemProvider.dispose();
		if (generalResourceItemProvider != null) generalResourceItemProvider.dispose();
		if (grlGraphItemProvider != null) grlGraphItemProvider.dispose();
		if (grlLinkableElementItemProvider != null) grlLinkableElementItemProvider.dispose();
		if (grLmodelElementItemProvider != null) grLmodelElementItemProvider.dispose();
		if (grlNodeItemProvider != null) grlNodeItemProvider.dispose();
		if (grLspecItemProvider != null) grLspecItemProvider.dispose();
		if (inBindingItemProvider != null) inBindingItemProvider.dispose();
		if (initializationItemProvider != null) initializationItemProvider.dispose();
		if (intentionalElementItemProvider != null) intentionalElementItemProvider.dispose();
		if (intentionalElementRefItemProvider != null) intentionalElementRefItemProvider.dispose();
		if (labelItemProvider != null) labelItemProvider.dispose();
		if (linkRefItemProvider != null) linkRefItemProvider.dispose();
		if (linkRefBendpointItemProvider != null) linkRefBendpointItemProvider.dispose();
		if (metadataItemProvider != null) metadataItemProvider.dispose();
		if (nodeConnectionItemProvider != null) nodeConnectionItemProvider.dispose();
		if (openWorkloadItemProvider != null) openWorkloadItemProvider.dispose();
		if (orForkItemProvider != null) orForkItemProvider.dispose();
		if (orJoinItemProvider != null) orJoinItemProvider.dispose();
		if (outBindingItemProvider != null) outBindingItemProvider.dispose();
		if (owPeriodicItemProvider != null) owPeriodicItemProvider.dispose();
		if (owPhaseTypeItemProvider != null) owPhaseTypeItemProvider.dispose();
		if (owPoissonItemProvider != null) owPoissonItemProvider.dispose();
		if (owUniformItemProvider != null) owUniformItemProvider.dispose();
		if (passiveResourceItemProvider != null) passiveResourceItemProvider.dispose();
		if (pathNodeItemProvider != null) pathNodeItemProvider.dispose();
		if (pluginBindingItemProvider != null) pluginBindingItemProvider.dispose();
		if (positionItemProvider != null) positionItemProvider.dispose();
		if (processingResourceItemProvider != null) processingResourceItemProvider.dispose();
		if (responsibilityItemProvider != null) responsibilityItemProvider.dispose();
		if (respRefItemProvider != null) respRefItemProvider.dispose();
		if (scenarioDefItemProvider != null) scenarioDefItemProvider.dispose();
		if (scenarioGroupItemProvider != null) scenarioGroupItemProvider.dispose();
		if (sizeItemProvider != null) sizeItemProvider.dispose();
		if (startPointItemProvider != null) startPointItemProvider.dispose();
		if (strategiesGroupItemProvider != null) strategiesGroupItemProvider.dispose();
		if (stubItemProvider != null) stubItemProvider.dispose();
		if (timerItemProvider != null) timerItemProvider.dispose();
		if (ucMmapItemProvider != null) ucMmapItemProvider.dispose();
		if (ucMmodelElementItemProvider != null) ucMmodelElementItemProvider.dispose();
		if (ucMspecItemProvider != null) ucMspecItemProvider.dispose();
		if (urNlinkItemProvider != null) urNlinkItemProvider.dispose();
		if (urNmodelElementItemProvider != null) urNmodelElementItemProvider.dispose();
		if (urNspecItemProvider != null) urNspecItemProvider.dispose();
		if (variableItemProvider != null) variableItemProvider.dispose();
		if (waitingPlaceItemProvider != null) waitingPlaceItemProvider.dispose();
		if (workloadItemProvider != null) workloadItemProvider.dispose();
	}

}
